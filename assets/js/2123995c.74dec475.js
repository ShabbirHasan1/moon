"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[31328],{41775:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var s=t(24246),i=t(71670);const o={slug:"proto-v0.26",title:"proto v0.26 - New native shim implementation",authors:["milesj"],tags:["proto","shim"]},r=void 0,l={permalink:"/blog/proto-v0.26",editUrl:"https://github.com/moonrepo/moon/tree/master/website/blog/2023-12-21_proto-v0.26.mdx",source:"@site/blog/2023-12-21_proto-v0.26.mdx",title:"proto v0.26 - New native shim implementation",description:"After many release candidates, and a ton of testing, proto v0.26 is finally here!",date:"2023-12-21T00:00:00.000Z",tags:[{label:"proto",permalink:"/blog/tags/proto"},{label:"shim",permalink:"/blog/tags/shim"}],readingTime:2.1,hasTruncateMarker:!0,authors:[{name:"Miles Johnson",title:"Founder, developer",url:"https://github.com/milesj",imageURL:"/img/authors/miles.jpg",key:"milesj"}],frontMatter:{slug:"proto-v0.26",title:"proto v0.26 - New native shim implementation",authors:["milesj"],tags:["proto","shim"]},unlisted:!1,prevItem:{title:"moon v1.19 - Improvements to task dependencies, codegen, and more",permalink:"/blog/moon-v1.19"},nextItem:{title:"proto v0.26 (rc) - Release candidate available for testing!",permalink:"/blog/proto-v0.26-rc"}},a={authorsImageUrls:[void 0]},c=[{value:"Rethinking shims",id:"rethinking-shims",level:2},{value:"Upgrade troubleshooting",id:"upgrade-troubleshooting",level:2},{value:"Other changes",id:"other-changes",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"After many release candidates, and a ton of testing, proto v0.26 is finally here!"}),"\n",(0,s.jsx)(n.h2,{id:"rethinking-shims",children:"Rethinking shims"}),"\n",(0,s.jsx)(n.p,{children:"proto at its core is a version manager, which means like most version managers, it relies on a\nconcept known as shims. Shims are lightweight executable scripts that act like a proxy to the\nunderlying binary, and are useful for proto to intercept executions and inject custom functionality,\nlike our dynamic version detection."}),"\n",(0,s.jsxs)(n.p,{children:["On Unix machines, we relied on Bash scripts for shims, which worked rather well. However, on\nWindows, we relied on PowerShell scripts (",(0,s.jsx)(n.code,{children:".ps1"}),"), batch/cmd scripts (",(0,s.jsx)(n.code,{children:".cmd"}),"), and Bash scripts, all\nwith differing levels of functionality, and each serving a separate purpose. Windows support ",(0,s.jsx)(n.em,{children:"did\nnot"})," work well."]}),"\n",(0,s.jsxs)(n.p,{children:["To avoid current and future compatibility issues, we needed a truly native solution, and that's\nexactly what we did. In this release, we wrote our own Rust based executable, that will replace all\nof the custom shim scripts. This new executable is named ",(0,s.jsx)(n.code,{children:"proto-shim"})," (",(0,s.jsx)(n.code,{children:"proto-shim.exe"})," on Windows)\nand is published alongside the ",(0,s.jsx)(n.code,{children:"proto"})," binary."]}),"\n",(0,s.jsx)(n.p,{children:"This new executable solves all of the following problems (hopfully):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Locatable on ",(0,s.jsx)(n.code,{children:"PATH"})," (is an ",(0,s.jsx)(n.code,{children:".exe"})," for Windows)"]}),"\n",(0,s.jsx)(n.li,{children:"Can pipe/redirect data"}),"\n",(0,s.jsx)(n.li,{children:"Handles stdin prompts/interactivity"}),"\n",(0,s.jsx)(n.li,{children:"Supports ctrl+c interruptions"}),"\n",(0,s.jsxs)(n.li,{children:["Passes parent signals to child processes (uses ",(0,s.jsx)(n.code,{children:"execvp"})," on Unix)"]}),"\n",(0,s.jsx)(n.li,{children:"Attempts to kill child processes on parent exit"}),"\n",(0,s.jsx)(n.li,{children:"Bubbles exit codes"}),"\n",(0,s.jsx)(n.li,{children:"Native performance"}),"\n",(0,s.jsx)(n.li,{children:"Doesn't require special privileges (no symlinks)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"upgrade-troubleshooting",children:"Upgrade troubleshooting"}),"\n",(0,s.jsxs)(n.p,{children:["Because this release adds a new executable (",(0,s.jsx)(n.code,{children:"proto-shim"}),"), you'll most likely run into issues when\nupgrading via ",(0,s.jsx)(n.code,{children:"proto upgrade"}),". The root issue is that the upgrade process was only aware of the\nsingle ",(0,s.jsx)(n.code,{children:"proto"})," file, and not the new ",(0,s.jsx)(n.code,{children:"proto-shim"})," file, so it will not copy the shim into the\ncorrect location, and subsequent proto commands will fail."]}),"\n",(0,s.jsx)(n.p,{children:"We could backport this change to v0.25, but it would require all users to upgrade to that patch\nversion first before upgrading to v0.26. But this still wouldn't solve the issue for users upgrading\nfrom v0.24, or an even earlier version."}),"\n",(0,s.jsxs)(n.p,{children:["The best way to remedy this situation is to simply\n",(0,s.jsx)(n.a,{href:"/docs/proto/install",children:"re-install proto as a whole"}),". Once you're on v0.26, this will be a non-issue."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# Unix\ncurl -fsSL https://moonrepo.dev/install/proto.sh | bash\n\n# Windows\nirm https://moonrepo.dev/install/proto.ps1 | iex\n"})}),"\n",(0,s.jsx)(n.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,s.jsxs)(n.p,{children:["View the ",(0,s.jsx)(n.a,{href:"https://github.com/moonrepo/proto/releases/tag/v0.26.0",children:"official release"})," for a full list\nof changes."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Added basic telemetry to track tool install/uninstall metrics."}),"\n",(0,s.jsx)(n.li,{children:"Fixed an issue where binaries were being symlinked with broken versions in their file name (most\ncommonly for Python)."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},71670:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>r});var s=t(27378);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);