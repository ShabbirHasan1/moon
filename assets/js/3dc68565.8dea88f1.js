"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7566],{49103:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>r});var t=s(24246),o=s(71670),i=s(79022);const c={title:"Tokens"},a=void 0,l={id:"concepts/token",title:"Tokens",description:"Tokens are variables and functions that can be used by command,",source:"@site/docs/concepts/token.mdx",sourceDirName:"concepts",slug:"/concepts/token",permalink:"/docs/concepts/token",draft:!1,unlisted:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/concepts/token.mdx",tags:[],version:"current",frontMatter:{title:"Tokens"},sidebar:"docs",previous:{title:"Task inheritance",permalink:"/docs/concepts/task-inheritance"},next:{title:"Toolchain",permalink:"/docs/concepts/toolchain"}},d={},r=[{value:"Functions",id:"functions",level:2},{value:"File groups",id:"file-groups",level:3},{value:"<code>@group</code>",id:"group",level:3},{value:"<code>@dirs</code>",id:"dirs",level:3},{value:"<code>@files</code>",id:"files",level:3},{value:"<code>@globs</code>",id:"globs",level:3},{value:"<code>@root</code>",id:"root",level:3},{value:"<code>@envs</code><VersionLabel></VersionLabel>",id:"envs",level:3},{value:"Inputs &amp; outputs",id:"inputs--outputs",level:3},{value:"<code>@in</code>",id:"in",level:3},{value:"<code>@out</code>",id:"out",level:3},{value:"Variables",id:"variables",level:2},{value:"Workspace",id:"workspace",level:3},{value:"<code>$workspaceRoot</code>",id:"workspaceroot",level:3},{value:"Project",id:"project",level:3},{value:"<code>$language</code>",id:"language",level:3},{value:"<code>$project</code>",id:"project-1",level:3},{value:"<code>$projectAlias</code>",id:"projectalias",level:3},{value:"<code>$projectRoot</code>",id:"projectroot",level:3},{value:"<code>$projectSource</code>",id:"projectsource",level:3},{value:"<code>$projectStack</code><VersionLabel></VersionLabel>",id:"projectstack",level:3},{value:"<code>$projectType</code>",id:"projecttype",level:3},{value:"Task",id:"task",level:3},{value:"<code>$target</code>",id:"target",level:3},{value:"<code>$task</code>",id:"task-1",level:3},{value:"<code>$taskPlatform</code>",id:"taskplatform",level:3},{value:"<code>$taskType</code>",id:"tasktype",level:3},{value:"Date/Time",id:"datetime",level:3},{value:"<code>$date</code>",id:"date",level:3},{value:"<code>$time</code>",id:"time",level:3},{value:"<code>$datetime</code>",id:"datetime-1",level:3},{value:"<code>$timestamp</code>",id:"timestamp",level:3}];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Tokens are variables and functions that can be used by ",(0,t.jsx)(n.a,{href:"../config/project#command",children:(0,t.jsx)(n.code,{children:"command"})}),",\n",(0,t.jsx)(n.a,{href:"../config/project#args",children:(0,t.jsx)(n.code,{children:"args"})}),", ",(0,t.jsx)(n.a,{href:"../config/project#env",children:(0,t.jsx)(n.code,{children:"env"})})," (>= v1.12),\n",(0,t.jsx)(n.a,{href:"../config/project#inputs",children:(0,t.jsx)(n.code,{children:"inputs"})}),", and ",(0,t.jsx)(n.a,{href:"../config/project#outputs",children:(0,t.jsx)(n.code,{children:"outputs"})})," when configuring a\ntask. They provide a way of accessing file group paths, referencing values from other task fields,\nand referencing metadata about the project and task itself."]}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsxs)(n.p,{children:["A token function is labeled as such as it takes a single argument, starts with an ",(0,t.jsx)(n.code,{children:"@"}),", and is\nformatted as ",(0,t.jsx)(n.code,{children:"@name(arg)"}),". The following token functions are available, grouped by their\nfunctionality."]}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Token functions ",(0,t.jsx)(n.em,{children:"must"})," be the only content within a value, as they expand to multiple files. When\nused in an ",(0,t.jsx)(n.code,{children:"env"})," value, multiple files are joined with a comma (",(0,t.jsx)(n.code,{children:","}),")."]})}),"\n",(0,t.jsx)(n.h3,{id:"file-groups",children:"File groups"}),"\n",(0,t.jsx)(n.p,{children:"These functions reference file groups by name, where the name is passed as the argument."}),"\n",(0,t.jsx)(n.h3,{id:"group",children:(0,t.jsx)(n.code,{children:"@group"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Usable in ",(0,t.jsx)(n.code,{children:"args"}),", ",(0,t.jsx)(n.code,{children:"env"}),", ",(0,t.jsx)(n.code,{children:"inputs"}),", and ",(0,t.jsx)(n.code,{children:"outputs"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@group(file_group)"})," token is a standard token that will be replaced with the file group items\nas-is, for both file paths and globs. This token merely exists for reusability purposes."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"fileGroups:\n  storybook:\n    - '.storybook/**/*'\n    - 'src/**/*'\n    - '**/*.stories.*'\n\n# Configured as\ntasks:\n  build:\n    command: 'build-storybook'\n    inputs:\n      - '@group(storybook)'\n  start:\n    command: 'start-storybook'\n    inputs:\n      - '@group(storybook)'\n\n# Resolves to\ntasks:\n  build:\n    command: 'build-storybook'\n    inputs:\n      - '/path/to/project/.storybook/**/*'\n      - '/path/to/project/src/**/*'\n  start:\n    command: 'start-storybook'\n    inputs:\n      - '/path/to/project/.storybook/**/*'\n      - '/path/to/project/src/**/*'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"dirs",children:(0,t.jsx)(n.code,{children:"@dirs"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Usable in ",(0,t.jsx)(n.code,{children:"args"}),", ",(0,t.jsx)(n.code,{children:"env"}),", ",(0,t.jsx)(n.code,{children:"inputs"}),", and ",(0,t.jsx)(n.code,{children:"outputs"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@dirs(file_group)"})," token will be replaced with an expanded list of directory paths, derived\nfrom the file group of the same name. If a glob pattern is detected within the file group, it will\naggregate all directories found."]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["This token walks the file system to verify each directory exists, and filters out those that don't.\nIf using within ",(0,t.jsx)(n.code,{children:"outputs"}),", you're better off using ",(0,t.jsx)(n.a,{href:"#group",children:(0,t.jsx)(n.code,{children:"@group"})})," instead."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"fileGroups:\n  lintable:\n    - 'src'\n    - 'tests'\n    - 'scripts'\n    - '*.config.js'\n\n# Configured as\ntasks:\n  lint:\n    command: 'eslint @dirs(lintable) --color'\n    inputs:\n      - '@dirs(lintable)'\n\n# Resolves to\ntasks:\n  lint:\n    command:\n      - 'eslint'\n      - 'src'\n      - 'tests'\n      - 'scripts'\n      - '--color'\n    inputs:\n      - '/path/to/project/src'\n      - '/path/to/project/tests'\n      - '/path/to/project/scripts'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"files",children:(0,t.jsx)(n.code,{children:"@files"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Usable in ",(0,t.jsx)(n.code,{children:"args"}),", ",(0,t.jsx)(n.code,{children:"env"}),", ",(0,t.jsx)(n.code,{children:"inputs"}),", and ",(0,t.jsx)(n.code,{children:"outputs"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@files(file_group)"})," token will be replaced with an expanded list of file paths, derived from\nthe file group of the same name. If a glob pattern is detected within the file group, it will\naggregate all files found."]}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["This token walks the file system to verify each file exists, and filters out those that don't. If\nusing within ",(0,t.jsx)(n.code,{children:"outputs"}),", you're better off using ",(0,t.jsx)(n.a,{href:"#group",children:(0,t.jsx)(n.code,{children:"@group"})})," instead."]})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"fileGroups:\n  config:\n    - '*.config.js'\n    - 'package.json'\n\n# Configured as\ntasks:\n  build:\n    command: 'webpack build @files(config)'\n    inputs:\n      - '@files(config)'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'webpack'\n      - 'build'\n      - 'babel.config.js'\n      - 'webpack.config.js'\n      - 'package.json'\n    inputs:\n      - '/path/to/project/babel.config.js'\n      - '/path/to/project/webpack.config.js'\n      - '/path/to/project/package.json'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"globs",children:(0,t.jsx)(n.code,{children:"@globs"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Usable in ",(0,t.jsx)(n.code,{children:"args"}),", ",(0,t.jsx)(n.code,{children:"env"}),", ",(0,t.jsx)(n.code,{children:"inputs"}),", and ",(0,t.jsx)(n.code,{children:"outputs"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@globs(file_group)"})," token will be replaced with the list of glob patterns as-is, derived from\nthe file group of the same name. If a non-glob pattern is detected within the file group, it will be\nignored."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"fileGroups:\n  tests:\n    - 'tests/**/*'\n    - '**/__tests__/**/*'\n\n# Configured as\ntasks:\n  test:\n    command: 'jest --testMatch @globs(tests)'\n    inputs:\n      - '@globs(tests)'\n\n# Resolves to\ntasks:\n  test:\n    command:\n      - 'jest'\n      - '--testMatch'\n      - 'tests/**/*'\n      - '**/__tests__/**/*'\n    inputs:\n      - '/path/to/project/tests/**/*'\n      - '/path/to/project/**/__tests__/**/*'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"root",children:(0,t.jsx)(n.code,{children:"@root"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Usable in ",(0,t.jsx)(n.code,{children:"args"}),", ",(0,t.jsx)(n.code,{children:"env"}),", ",(0,t.jsx)(n.code,{children:"inputs"}),", and ",(0,t.jsx)(n.code,{children:"outputs"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@root(file_group)"})," token will be replaced with the lowest common directory, derived from the\nfile group of the same name. If a glob pattern is detected within the file group, it will walk the\nfile system and aggregate all directories found before reducing."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"fileGroups:\n  sources:\n    - 'src/app'\n    - 'src/packages'\n    - 'src/scripts'\n\n# Configured as\ntasks:\n  format:\n    command: 'prettier --write @root(sources)'\n    inputs:\n      - '@root(sources)'\n\n# Resolves to\ntasks:\n  format:\n    command:\n      - 'prettier'\n      - '--write'\n      - 'src'\n    inputs:\n      - '/path/to/project/src'\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["When there's no directies, or too many directories, this function will return the project root\nusing ",(0,t.jsx)(n.code,{children:"."}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"envs",children:[(0,t.jsx)(n.code,{children:"@envs"}),(0,t.jsx)(i.Z,{version:"1.21.0"})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Usable in ",(0,t.jsx)(n.code,{children:"inputs"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@envs(file_group)"})," token will be replaced with all environment variables that have been\nconfigured in the group of the provided name."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"fileGroups:\n  sources:\n    - 'src/**/*'\n    - '$NODE_ENV'\n\n# Configured as\ntasks:\n  build:\n    command: 'vite build'\n    inputs:\n      - '@envs(sources)'\n\n\n# Resolves to\ntasks:\n  build:\n    command: 'vite build'\n    inputs:\n      - '$NODE_ENV'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"inputs--outputs",children:"Inputs & outputs"}),"\n",(0,t.jsx)(n.h3,{id:"in",children:(0,t.jsx)(n.code,{children:"@in"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Usable in ",(0,t.jsx)(n.code,{children:"args"})," only."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@in(index)"})," token will be replaced with a single path, derived from\n",(0,t.jsx)(n.a,{href:"../config/project#inputs",children:(0,t.jsx)(n.code,{children:"inputs"})})," by numerical index. If a glob pattern is referenced by index,\nthe glob will be used as-is, instead of returning the expanded list of files."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command:\n      - 'babel'\n      - '--copy-files'\n      - '--config-file'\n      - '@in(1)'\n      - '@in(0)'\n    inputs:\n      - 'src'\n      - 'babel.config.js'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'babel'\n      - '--copy-files'\n      - '--config-file'\n      - 'babel.config.js'\n      - 'src'\n    inputs:\n      - '/path/to/project/src'\n      - '/path/to/project/babel.config.js'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"out",children:(0,t.jsx)(n.code,{children:"@out"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Usable in ",(0,t.jsx)(n.code,{children:"args"})," only."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"@out(index)"})," token will be replaced with a single path, derived from\n",(0,t.jsx)(n.a,{href:"../config/project#outputs",children:(0,t.jsx)(n.code,{children:"outputs"})})," by numerical index. If a token function is referenced by\nindex, the process will ",(0,t.jsx)(n.strong,{children:"fail"}),", as it requires literal folder and file paths."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command:\n      - 'babel'\n      - '.'\n      - '--out-dir'\n      - '@out(0)'\n    outputs:\n      - 'lib'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'babel'\n      - '.'\n      - '--out-dir'\n      - 'lib'\n    outputs:\n      - '/path/to/project/lib'\n"})}),"\n",(0,t.jsx)(n.h2,{id:"variables",children:"Variables"}),"\n",(0,t.jsxs)(n.p,{children:["A token variable is a value that starts with ",(0,t.jsx)(n.code,{children:"$"})," and is substituted to a value derived from the\ncurrent workspace, project, and task. And unlike token functions, token variables can be placed\n",(0,t.jsx)(n.em,{children:"within"})," content when necessary, and supports multiple variables within the same content."]}),"\n",(0,t.jsx)(n.h3,{id:"workspace",children:"Workspace"}),"\n",(0,t.jsx)(n.h3,{id:"workspaceroot",children:(0,t.jsx)(n.code,{children:"$workspaceRoot"})}),"\n",(0,t.jsx)(n.p,{children:"Absolute file path to the workspace root."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--cwd'\n      - '$workspaceRoot'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--cwd'\n      - '/path/to/repo'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"project",children:"Project"}),"\n",(0,t.jsx)(n.h3,{id:"language",children:(0,t.jsx)(n.code,{children:"$language"})}),"\n",(0,t.jsxs)(n.p,{children:["Programming language the project is written in, as defined in\n",(0,t.jsx)(n.a,{href:"../config/project#language",children:(0,t.jsx)(n.code,{children:"moon.yml"})}),". If the project has not defined the\n",(0,t.jsx)(n.a,{href:"../config/project#language",children:(0,t.jsx)(n.code,{children:"language"})}),' setting, or does not have a config, this defaults to\n"unknown".']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example debug $language'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - 'debug'\n      - 'node'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"project-1",children:(0,t.jsx)(n.code,{children:"$project"})}),"\n",(0,t.jsxs)(n.p,{children:["ID/name of the project that owns the currently running task, as defined in\n",(0,t.jsx)(n.a,{href:"../config/workspace",children:(0,t.jsx)(n.code,{children:".moon/workspace.yml"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example --project $project'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--project'\n      - 'web'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"projectalias",children:(0,t.jsx)(n.code,{children:"$projectAlias"})}),"\n",(0,t.jsx)(n.p,{children:"Alias of the project that owns the currently running task. If not enabled, or no alias exists for\nthe project, this will return an empty string."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example --projectAlias $projectAlias'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--projectAlias'\n      - '@web/app'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"projectroot",children:(0,t.jsx)(n.code,{children:"$projectRoot"})}),"\n",(0,t.jsx)(n.p,{children:"Absolute file path to the project root."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example --cwd $projectRoot'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--cwd'\n      - '/path/to/repo/apps/web'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"projectsource",children:(0,t.jsx)(n.code,{children:"$projectSource"})}),"\n",(0,t.jsxs)(n.p,{children:["Relative file path from the workspace root to the project root, as defined in\n",(0,t.jsx)(n.a,{href:"../config/workspace",children:(0,t.jsx)(n.code,{children:".moon/workspace.yml"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--cache-dir'\n      - '../../.cache/$projectSource'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--cache-dir'\n      - '../../.cache/apps/web'\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"projectstack",children:[(0,t.jsx)(n.code,{children:"$projectStack"}),(0,t.jsx)(i.Z,{version:"1.22.0"})]}),"\n",(0,t.jsxs)(n.p,{children:["The stack of the project, as defined in ",(0,t.jsx)(n.a,{href:"../config/project#stack",children:(0,t.jsx)(n.code,{children:"moon.yml"})}),". If the project has\nnot defined the ",(0,t.jsx)(n.a,{href:"../config/project#stack",children:(0,t.jsx)(n.code,{children:"stack"})}),' setting, or does not have a config, this defaults\nto "unknown".']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example debug $projectStack'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - 'debug'\n      - 'backend'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"projecttype",children:(0,t.jsx)(n.code,{children:"$projectType"})}),"\n",(0,t.jsxs)(n.p,{children:["The type of project, as defined in ",(0,t.jsx)(n.a,{href:"../config/project#type",children:(0,t.jsx)(n.code,{children:"moon.yml"})}),". If the project has not\ndefined the ",(0,t.jsx)(n.a,{href:"../config/project#type",children:(0,t.jsx)(n.code,{children:"type"})}),' setting, or does not have a config, this defaults to\n"unknown".']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example debug $projectType'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - 'debug'\n      - 'application'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"task",children:"Task"}),"\n",(0,t.jsx)(n.h3,{id:"target",children:(0,t.jsx)(n.code,{children:"$target"})}),"\n",(0,t.jsx)(n.p,{children:"Target that is currently running."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example $target'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - 'web:build'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"task-1",children:(0,t.jsx)(n.code,{children:"$task"})}),"\n",(0,t.jsx)(n.p,{children:"ID/name of the task that is currently running."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example --task=$task'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--task=build'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"taskplatform",children:(0,t.jsx)(n.code,{children:"$taskPlatform"})}),"\n",(0,t.jsxs)(n.p,{children:["The platform that task will run against, as defined in ",(0,t.jsx)(n.a,{href:"../config/project#platform-1",children:(0,t.jsx)(n.code,{children:"moon.yml"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example --platform $taskPlatform'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--platform'\n      - 'system'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"tasktype",children:(0,t.jsx)(n.code,{children:"$taskType"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"./task#types",children:"type of task"}),", based on its configured settings."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example --type $taskType'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--type'\n      - 'build'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"datetime",children:"Date/Time"}),"\n",(0,t.jsx)(n.h3,{id:"date",children:(0,t.jsx)(n.code,{children:"$date"})}),"\n",(0,t.jsxs)(n.p,{children:["The current date in the format of ",(0,t.jsx)(n.code,{children:"YYYY-MM-DD"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example --date $date'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--date'\n      - '2023-03-17'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"time",children:(0,t.jsx)(n.code,{children:"$time"})}),"\n",(0,t.jsxs)(n.p,{children:["The current time in the format of ",(0,t.jsx)(n.code,{children:"HH:MM:SS"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example --time $time'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--time'\n      - '14:05:10'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"datetime-1",children:(0,t.jsx)(n.code,{children:"$datetime"})}),"\n",(0,t.jsxs)(n.p,{children:["The current date and time in the format of ",(0,t.jsx)(n.code,{children:"YYYY-MM-DD_HH:MM:SS"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example --datetime $datetime'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--datetime'\n      - '2023-03-17_14:05:10'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"timestamp",children:(0,t.jsx)(n.code,{children:"$timestamp"})}),"\n",(0,t.jsx)(n.p,{children:"The current date and time as a UNIX timestamp in seconds."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"# Configured as\ntasks:\n  build:\n    command: 'example --timestamp $timestamp'\n\n# Resolves to\ntasks:\n  build:\n    command:\n      - 'example'\n      - '--timestamp'\n      - '1679087127'\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},79022:(e,n,s)=>{s.d(n,{Z:()=>i});var t=s(9619),o=s(24246);function i(e){let{header:n,inline:s,updated:i,version:c}=e;return(0,o.jsx)(t.Z,{text:`v${c}`,variant:i?"success":"info",className:n?"absolute right-0 top-1.5":s?"inline-block":"ml-2"})}},9619:(e,n,s)=>{s.d(n,{Z:()=>a});var t=s(40624),o=s(31792),i=s(24246);const c={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function a(e){let{className:n,icon:s,text:a,variant:l}=e;return(0,i.jsxs)("span",{className:(0,t.Z)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",l?c[l]:"bg-gray-100 text-gray-800",n),children:[s&&(0,i.jsx)(o.Z,{icon:s,className:"mr-1"}),a]})}},71670:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>c});var t=s(27378);const o={},i=t.createContext(o);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);