"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[85995],{12442:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"guides/mcp","title":"MCP integration","description":"Model Context Protocol (MCP) is an open standard that enables AI","source":"@site/docs/guides/mcp.mdx","sourceDirName":"guides","slug":"/guides/mcp","permalink":"/docs/guides/mcp","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/guides/mcp.mdx","tags":[],"version":"current","frontMatter":{"title":"MCP integration"},"sidebar":"guides","previous":{"title":"Extensions","permalink":"/docs/guides/extensions"},"next":{"title":"Offline mode","permalink":"/docs/guides/offline-mode"}}');var s=t(62540),i=t(43023),r=t(54291);const c={title:"MCP integration"},l=void 0,a={},d=[{value:"Setup",id:"setup",level:2},{value:"Cursor",id:"cursor",level:3},{value:"VS Code",id:"vs-code",level:3},{value:"Available tools",id:"available-tools",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.A,{version:"1.37.0",header:!0}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://modelcontextprotocol.io",children:"Model Context Protocol"})," (MCP) is an open standard that enables AI\nmodels to interact with external tools and services through a unified interface. The moon CLI\ncontains an MCP server that you can register with your code editor to allow LLMs to use moon\ndirectly."]}),"\n",(0,s.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,s.jsx)(n.h3,{id:"cursor",children:"Cursor"}),"\n",(0,s.jsxs)(n.p,{children:["To use MCP servers in Cursor, create a ",(0,s.jsx)(n.code,{children:".cursor/mcp.json"})," file in your project directory, or\n",(0,s.jsx)(n.code,{children:"~/.cursor/mcp.json"})," globally, with the following content:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title=".cursor/mcp.json"',children:'{\n  "mcpServers": {\n    "moon": {\n      "command": "moon",\n      "args": ["mcp"]\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:'Once configured, the moon MCP server should appear in the "Available Tools" section on the MCP\nsettings page in Cursor.'}),"\n",(0,s.jsx)(n.h3,{id:"vs-code",children:"VS Code"}),"\n",(0,s.jsxs)(n.p,{children:["To use MCP servers in VS Code, you must have the\n",(0,s.jsx)(n.a,{href:"https://code.visualstudio.com/docs/copilot/chat/copilot-chat",children:"Copilot Chat"})," extension installed.\nOnce installed, create a ",(0,s.jsx)(n.code,{children:".vscode/mcp.json"})," file with the following content:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title=".vscode/mcp.json"',children:'{\n  "servers": {\n    "moon": {\n      "type": "stdio",\n      "command": "moon",\n      "args": ["mcp"]\n    }\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Once your MCP server is configured, you can use it with\n",(0,s.jsx)(n.a,{href:"https://code.visualstudio.com/docs/copilot/chat/chat-agent-mode",children:"GitHub Copilot\u2019s agent mode"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Open the Copilot Chat view in VS Code"}),"\n",(0,s.jsx)(n.li,{children:"Enable agent mode using the mode select dropdown"}),"\n",(0,s.jsx)(n.li,{children:"Toggle on moon's MCP tools using the \u201cTools\u201d button"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"available-tools",children:"Available tools"}),"\n",(0,s.jsx)(n.p,{children:"The following tools are available in the moon MCP server and can be executed by LLMs using agent\nmode."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"get_project"})," - Get a project and its tasks by ",(0,s.jsx)(n.code,{children:"id"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"get_projects"})," - Get all projects."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"get_task"})," - Get a task by ",(0,s.jsx)(n.code,{children:"target"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"get_tasks"})," - Get all tasks."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["The\n",(0,s.jsx)(n.a,{href:"https://github.com/moonrepo/moon/blob/master/packages/types/src/mcp.ts",children:"request and response shapes"}),"\nfor these tools are defined as TypeScript types in the\n",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/@moonrepo/types",children:(0,s.jsx)(n.code,{children:"@moonrepo/types"})})," package."]})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},43023:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var o=t(63696);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}},54291:(e,n,t)=>{t.d(n,{A:()=>i});var o=t(59115),s=t(62540);function i(e){let{header:n,inline:t,updated:i,version:r}=e;return(0,s.jsx)(o.A,{text:`v${r}`,variant:i?"success":"info",className:n?"absolute right-0 top-1.5":t?"inline-block":"ml-2"})}},59115:(e,n,t)=>{t.d(n,{A:()=>c});var o=t(11750),s=t(20916),i=t(62540);const r={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function c(e){let{className:n,icon:t,text:c,variant:l}=e;return(0,i.jsxs)("span",{className:(0,o.A)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",l?r[l]:"bg-gray-100 text-gray-800",n),children:[t&&(0,i.jsx)(s.A,{icon:t,className:"mr-1"}),c]})}}}]);