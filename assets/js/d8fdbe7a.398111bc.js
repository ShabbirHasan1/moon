"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40614],{13569:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var i=s(24246),o=s(71670);const t={title:"query touched-files",sidebar_label:"touched-files"},c=void 0,d={id:"commands/query/touched-files",title:"query touched-files",description:"Use the moon query touched-files sub-command to query for a list of touched files (added,",source:"@site/docs/commands/query/touched-files.mdx",sourceDirName:"commands/query",slug:"/commands/query/touched-files",permalink:"/docs/commands/query/touched-files",draft:!1,unlisted:!1,editUrl:"https://github.com/moonrepo/moon/tree/master/website/docs/commands/query/touched-files.mdx",tags:[],version:"current",frontMatter:{title:"query touched-files",sidebar_label:"touched-files"},sidebar:"docs",previous:{title:"tasks",permalink:"/docs/commands/query/tasks"},next:{title:"run",permalink:"/docs/commands/run"}},r={},l=[{value:"Options",id:"options",level:3},{value:"Configuration",id:"configuration",level:3}];function a(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"moon query touched-files"})," sub-command to query for a list of touched files (added,\nmodified, deleted, etc) using the current VCS state. These are the same queries that\n",(0,i.jsx)(n.a,{href:"../ci",children:(0,i.jsx)(n.code,{children:"moon ci"})})," and ",(0,i.jsx)(n.a,{href:"../run",children:(0,i.jsx)(n.code,{children:"moon run"})})," use under the hood."]}),"\n",(0,i.jsx)(n.p,{children:"Touches files are determined using the following logic:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"--defaultBranch"})," is provided, and the current branch is the\n",(0,i.jsx)(n.a,{href:"../../config/workspace#defaultbranch",children:(0,i.jsx)(n.code,{children:"vcs.defaultBranch"})}),", then compare against the previous\nrevision of the default branch (",(0,i.jsx)(n.code,{children:"HEAD~1"}),"). This is what ",(0,i.jsx)(n.a,{href:"../../guides/ci",children:"continuous integration"}),"\nuses."]}),"\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"--local"})," is provided, touched files are based on your local index only (",(0,i.jsx)(n.code,{children:"git status"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Otherwise, then compare the defined base (",(0,i.jsx)(n.code,{children:"--base"}),") against head (",(0,i.jsx)(n.code,{children:"--head"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"# Return all files\n$ moon query touched-files\n\n# Return deleted files\n$ moon query touched-files --status deleted\n\n# Return all files between 2 revisions\n$ moon query touched-files --base <branch> --head <commit>\n"})}),"\n",(0,i.jsx)(n.p,{children:"By default, this will output a list of absolute file paths, separated by new lines."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"/absolute/file/one.ts\n/absolute/file/two.ts\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The files can also be output in JSON by passing the ",(0,i.jsx)(n.code,{children:"--json"})," flag. The output has the following\nstructure:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"{\n\tfiles: string[],\n\toptions: QueryOptions,\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--defaultBranch"})," - When on the default branch, compare against the previous revision."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--base <rev>"})," - Base branch, commit, or revision to compare against. Defaults to\n",(0,i.jsx)(n.a,{href:"../../config/workspace#defaultbranch",children:(0,i.jsx)(n.code,{children:"vcs.defaultBranch"})}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--head <rev>"})," - Current branch, commit, or revision to compare with. Defaults to ",(0,i.jsx)(n.code,{children:"HEAD"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--json"})," - Display the files in JSON format."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--local"})," - Gather files from you local state instead of remote."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"--status <type>"})," - Filter files based on a touched status. Can be passed multiple times.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Types: ",(0,i.jsx)(n.code,{children:"all"})," (default), ",(0,i.jsx)(n.code,{children:"added"}),", ",(0,i.jsx)(n.code,{children:"deleted"}),", ",(0,i.jsx)(n.code,{children:"modified"}),", ",(0,i.jsx)(n.code,{children:"staged"}),", ",(0,i.jsx)(n.code,{children:"unstaged"}),", ",(0,i.jsx)(n.code,{children:"untracked"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../../config/workspace#vcs",children:(0,i.jsx)(n.code,{children:"vcs"})})," in ",(0,i.jsx)(n.code,{children:".moon/workspace.yml"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},71670:(e,n,s)=>{s.d(n,{Z:()=>d,a:()=>c});var i=s(27378);const o={},t=i.createContext(o);function c(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);